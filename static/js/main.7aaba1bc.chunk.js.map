{"version":3,"sources":["baseUrl.js","components/HeaderComponent.js","components/HomeComponent.js","components/PreviewComponent.js","components/RegisterComponent.js","components/LoginComponent.js","components/RegistrationscountComponent.js","components/RegistrationsComponent.js","components/RegistrationDetail.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","Header","props","handleLogout","bind","event","fetch","then","response","json","onLoggingOut","catch","error","console","log","message","this","isLoggedIn","Menu","secondary","pointing","inverted","size","Container","to","activeClassName","Responsive","as","Item","minWidth","name","Icon","position","onClick","maxWidth","Dropdown","item","icon","text","className","Component","Home","content","Grid","divided","Row","Column","computer","mobile","src","alt","Button","color","Preview","celled","fullName","email","registrationType","numberOfTickets","URL","createObjectURL","id","Register","handleBlur","field","evt","setState","touched","state","previewOpen","handleInputChange","handleSubmit","handleImage","handleCancel","showPreview","formData","FormData","append","method","body","ok","Error","status","errmsg","alert","_id","statusText","preventDefault","target","value","files","length","errors","test","validate","Form","Group","widths","Input","fluid","label","placeholder","type","required","onChange","onBlur","min","disabled","accept","Confirm","open","onCancel","onConfirm","header","Login","username","password","onLogging","newLogin","JSON","stringify","headers","textAlign","style","height","verticalAlign","Segment","stacked","iconPosition","Registrationscount","entries","selfCount","groupCount","corporateCount","othersCount","i","backgroundColor","chartType","data","options","title","chartArea","width","hAxis","minValue","vAxis","legendToggle","entriesLoading","Message","Registrations","List","relaxed","map","entry","key","Content","Intl","DateTimeFormat","year","month","day","format","Date","createdAt","RegistrationDetail","Image","idImage","Main","prevProps","prevState","Fragment","onLogOut","path","component","exact","onLogIn","loginLoading","match","filter","params","registrationId","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7aaba1bc.chunk.js","sourcesContent":["export const baseUrl=\"https://registration-management.herokuapp.com/\";\n","import React, {Component} from 'react';\nimport { Menu,Container,Icon,Responsive,Dropdown } from 'semantic-ui-react';\nimport {NavLink} from 'react-router-dom';\nimport {baseUrl} from '../baseUrl';\nclass Header extends Component {\n    constructor(props){\n        super(props);\n        this.handleLogout=this.handleLogout.bind(this);\n    }\n    handleLogout(event){\n        fetch(baseUrl+\"logout\")\n                .then(response=>response.json())\n                .then((response)=>{\n                    this.props.onLoggingOut();\n                })\n                .catch(error=>console.log(error.message))\n    }\n    render() {\n      if(this.props.isLoggedIn==='true'){\n        return(\n            <Menu secondary pointing inverted size=\"massive\">\n                    <Container>\n                        <NavLink to=\"/registrationsCount\" activeClassName=\"active\">\n                            <Responsive as={Menu.Item} minWidth={790}\n                                name='home'> \n                                        <Icon name='chart bar'  />Registrations Count\n                            </Responsive>\n                        </NavLink>\n                        <NavLink to=\"/registrations\" activeClassName=\"active\">\n                            <Responsive as={Menu.Item} minWidth={790}\n                                name='home'> \n                                        <Icon name='list'  />All Registrations\n                            </Responsive>\n                        </NavLink>\n                        <Menu.Menu position='right'>\n                                <Responsive as={Menu.Item} minWidth={790}\n                                    name='admin'>\n                                        <NavLink to=\"/home\" onClick={this.handleLogout}>\n                                            <Icon name=\"sign out alternate\"></Icon>  Logout \n                                        </NavLink>\n                                </Responsive>\n                        </Menu.Menu>\n                        <Responsive as ={Menu.Menu} maxWidth={789}  position='right'>\n                            <Dropdown\n                                item\n                                icon ='bars'\n                                >\n                                <Dropdown.Menu>\n                                    <NavLink to=\"/registrationsCount\"><Dropdown.Item text='Registaration Count' secondary className=\"mobile-dropdown\"/></NavLink>\n                                    <NavLink to=\"/registrations\"><Dropdown.Item text='All registrations' secondary className=\"mobile-dropdown\"/></NavLink>\n                                    <NavLink to=\"/home\" onClick={this.handleLogout}><Dropdown.Item text='Logout' secondary className=\"mobile-dropdown\"/></NavLink>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Responsive>\n                    </Container>\n                </Menu>\n        );\n      }else{\n          return(\n                <Menu secondary pointing inverted size=\"massive\">\n                    <Container>\n                        <NavLink to=\"/home\" activeClassName=\"active\">\n                            <Responsive as={Menu.Item} minWidth={790}\n                                name='home'> \n                                        <Icon name='home'  />Home \n                            </Responsive>\n                        </NavLink>\n                        <NavLink to=\"/register\" >\n                            <Responsive as={Menu.Item} minWidth={790}\n                                name='register'>\n                                    <Icon name='signup'  />Register for the event\n                            </Responsive>\n                        </NavLink>\n                        <Menu.Menu position='right'>\n                            <NavLink to=\"/login\">\n                                <Responsive as={Menu.Item} minWidth={790}\n                                    name='admin'>\n                                        Are you an admin?\n                                </Responsive>\n                            </NavLink>\n                        </Menu.Menu>\n                        <Responsive as ={Menu.Menu} maxWidth={789}  position='right'>\n                            <Dropdown\n                                item\n                                icon ='bars'\n                                >\n                                <Dropdown.Menu>\n                                    <NavLink to=\"/home\"><Dropdown.Item text='Home' secondary className=\"mobile-dropdown\"/></NavLink>\n                                    <NavLink to=\"/register\"><Dropdown.Item text='Register' className=\"mobile-dropdown\" secondary/></NavLink>\n                                    <NavLink to=\"/login\"><Dropdown.Item text='Admin?' secondary className=\"mobile-dropdown\"/></NavLink>\n                                </Dropdown.Menu>\n                            </Dropdown>\n                        </Responsive>\n                    </Container>\n                </Menu>\n          )\n      }\n      \n    }\n  }\n  \nexport default Header;","import React from 'react';\nimport {Header,Container,Grid,Button,Icon} from 'semantic-ui-react';\nimport {NavLink} from 'react-router-dom';\n\nconst Home = ()=>{\n    return (\n        <Container className=\"home\">\n            <Header\n                as='h1'\n                content='Welcome'\n                inverted\n            />\n            <Header \n                as=\"h2\"     \n                size=\"large\" \n                inverted \n                content=\"Book Your Spot for Thurday's event!\" \n            />\n            <p>Don't miss out on our sixth annual event, the largest event of all the events.</p>\n            <Grid divided>\n                <Grid.Row>\n                    <Grid.Column computer={1}></Grid.Column>\n                    <Grid.Column computer={4} mobile={16}>\n                        <div className=\"feature-div\">\n                            <img src=\"images/man.png\" className=\"man-image\" alt=\"featured\"/>\n                            <p><strong> Speaker 1</strong></p>\n                        </div>\n                    </Grid.Column>\n                    <Grid.Column computer={1}></Grid.Column>\n                    <Grid.Column computer={4} mobile={16}>\n                        <img src=\"images/woman.png\" className=\"man-image\" alt=\"featured\"/>\n                        <p><strong> Speaker 2</strong></p>\n                    </Grid.Column>\n                    <Grid.Column computer={1} ></Grid.Column>\n                    <Grid.Column computer={4} mobile={16}>\n                        <img src=\"images/man2.png\" className=\"man-image\"alt=\"featured\"/>\n                        <p><strong> Speaker 3</strong></p>\n                    </Grid.Column>\n                    <Grid.Column computer={1}></Grid.Column>\n                </Grid.Row>\n                \n            </Grid>\n            <div className=\"registerButton\">\n                <NavLink to=\"/register\">\n                    <Button color='teal' size=\"huge\">\n                            Register Now <Icon name='arrow alternate circle right outline'/>\n                    </Button>\n                </NavLink>\n            </div>\n                \n        </Container>\n    );\n}\nexport default Home;\n","import React from 'react';\nimport {Grid,Header} from 'semantic-ui-react';\nconst Preview = (props)=>{\n    return (\n        <Grid celled>\n            <Grid.Row className=\"preview\">\n                <Grid.Column computer={6} mobile={16}>\n                    <Header as=\"h3\" content=\"Full Name: \"/>\n                    <span>{props.fullName}</span>\n                    <Header as=\"h3\" content=\"Mobile:\"/>\n                    <span>{props.mobile}</span>\n                    <Header as=\"h3\" content=\"Email:\"/>\n                    <span>{props.email}</span>\n                    <Header as=\"h3\" content=\"Registration Type:\" />\n                    <span>{props.registrationType}</span>\n                    <Header as=\"h3\" content=\"Number of Tickets:\"/>\n                    <span>{props.numberOfTickets}</span>\n                </Grid.Column>\n                <Grid.Column computer={10} mobile={16}>\n                    <Header as=\"h3\">Id image</Header>\n                    <img src={URL.createObjectURL(props.id)} alt=\"id\"/>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    );\n}\nexport default Preview;","import React, { Component } from 'react'\nimport { Form,Container,Header, Grid,Confirm} from 'semantic-ui-react';\nimport Preview from './PreviewComponent';\nimport {baseUrl} from '../baseUrl';\n\nclass Register extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            fullName:'',\n            mobile:'',\n            email:'',\n            registrationType:'self',\n            numberOfTickets:'1',\n            id:null,\n            touched:{\n                fullName:false,\n                mobile:false,\n                email:false,\n            },\n            previewOpen:false,\n        }\n        this.handleInputChange=this.handleInputChange.bind(this);\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.handleBlur=this.handleBlur.bind(this);\n        this.handleImage=this.handleImage.bind(this);\n        this.handleCancel=this.handleCancel.bind(this);\n        this.showPreview=this.showPreview.bind(this);\n    }\n\n    handleSubmit(event){\n        const formData=new FormData();\n        formData.append('fullName',this.state.fullName);\n        formData.append('mobile',this.state.mobile);\n        formData.append('email',this.state.email);\n        formData.append('registrationType',this.state.registrationType);\n        formData.append('numberOfTickets',this.state.numberOfTickets);\n        formData.append('id',this.state.id);\n        fetch(baseUrl+\"register\",{\n            method: \"POST\",\n            body:formData,\n        })\n        .then(response => {\n            if (response.ok) {\n            return response;\n            }else {\n                var error = new Error('Error ' + response.status + ': ' + response.errmsg);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n                throw error;\n        })\n        .then(response => response.json())\n        .then(response => alert('You have been registered successfully. Your registration ID is: '+response._id))\n        .catch(error =>  {\n            if(error.response.statusText===\"Conflict\"){\n                alert(\"Entry with this email already exists\");\n            }else{\n                alert(\"We couldn't register you currently. Please try again later.\")\n            }\n        });\n        this.setState({previewOpen:false});\n        event.preventDefault();\n    }\n\n    handleInputChange(event){\n        const target=event.target;\n        const value=target.value;\n        const name=target.name;\n        this.setState({\n            [name]:value\n        })\n    }\n\n    handleBlur=(field)=>(evt)=>{\n        this.setState({\n            touched:{...this.state.touched,[field]:true}\n        });\n    }\n\n    handleImage(event){\n        this.setState({\n            id: event.target.files[0]\n        })\n    }\n\n    showPreview(){\n        if(this.state.fullName.length===0 || this.state.mobile.length===0 \n            || this.state.email.length===0 || this.state.id===null){\n                alert(\"Please fill in all the details\");\n                return;\n        }\n        this.setState({\n            previewOpen:true\n        })\n    }\n\n    handleCancel(){\n        this.setState({\n            previewOpen:false\n        })\n    }\n\n    validate(fullName,mobile,email){\n        const errors={\n            fullName:'',\n            mobile:'',\n            email:''\n        };\n        if(this.state.touched.fullName && fullName.length<3){\n            errors.fullName='First Name should be of length >=3';\n        }\n        const mobreg=/^[789]\\d{9}$/;\n        if(this.state.touched.mobile && !mobreg.test(mobile) && mobile.length!==10){\n            errors.mobile='Mobile Number should only contain digits and length equal to 10'\n        }\n        const emailreg=/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        if(this.state.touched.email && !emailreg.test(email)){\n            errors.email='Enter a valid Email'\n        }\n        return errors;\n    }\n    render() {\n        const errors=this.validate(this.state.fullName,this.state.mobile,this.state.email);\n        return (\n            <Container className=\"register\">\n                <Grid divided>\n                    <Grid.Row>\n                        <Grid.Column computer={9} mobile={16}>\n                            <Header as=\"h2\" content=\"Please fill in the details below.\" inverted size=\"huge\"/>\n                            <Form inverted>\n                                <Form.Group widths=\"equal\">\n                                    <Form.Input fluid label='Full name' placeholder='Full name' type=\"text\" required \n                                        name=\"fullName\" value={this.state.fullName}\n                                        onChange={this.handleInputChange}\n                                        onBlur={this.handleBlur('fullName')}\n                                        error={errors.fullName}\n                                    />\n\n                                    <Form.Input fluid label='Mobile' placeholder='Mobile' type=\"tel\" required \n                                        name=\"mobile\" value={this.state.mobile}\n                                        onChange={this.handleInputChange}\n                                        onBlur={this.handleBlur('mobile')}\n                                        error={errors.mobile}\n                                    />\n                                </Form.Group>\n                                <Form.Input fluid label='Email' placeholder='Email' type=\"email\" required \n                                    name=\"email\" value={this.state.email}\n                                    onChange={this.handleInputChange}\n                                    onBlur={this.handleBlur('email')}\n                                    error={errors.email}\n                                />\n                                <label className=\"typeLabel\">Registration Type</label>\n                                <select name=\"registrationType\" value={this.state.registrationType} required\n                                    onChange={this.handleInputChange}\n                                >\n                                    <option value=\"self\">Self</option>\n                                    <option value=\"group\">Group</option>\n                                    <option value=\"corporate\">Corporate</option>\n                                    <option value=\"others\">Others</option>\n                                </select>\n                                <Form.Input fluid label='No of tickets' placeholder='No of tickets' type=\"number\" min=\"1\" required \n                                    name=\"numberOfTickets\" value={this.state.numberOfTickets}\n                                    onChange={this.handleInputChange} \n                                    disabled={this.state.registrationType==='self'}    \n                                />\n                                <Form.Input fluid label='Upload ID card' placeholder='Upload ID card' type=\"file\" \n                                    accept=\"image/*\" required\n                                    onChange={this.handleImage}\n                                />\n                                <Form.Button onClick={this.showPreview}>Submit</Form.Button>\n                                <Confirm open={this.state.previewOpen} \n                                    content={\n                                        <Preview fullName={this.state.fullName} mobile={this.state.mobile}\n                                            email={this.state.email} registrationType={this.state.registrationType}\n                                            numberOfTickets={this.state.numberOfTickets} id={this.state.id}\n                                        />\n                                    }\n                                    onCancel={this.handleCancel}\n                                    onConfirm={this.handleSubmit}\n                                    header=\"Are you sure you want to register with the following details?\"\n                                />\n                            </Form>\n                        </Grid.Column>\n                        <Grid.Column computer={2} mobile={16}></Grid.Column>\n                        <Grid.Column computer={5} mobile={16}>\n                            <img src=\"images/register.png\" alt=\"register\"></img>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n        </Container>\n        )\n    }\n}\nexport default Register;","import React, {Component} from 'react';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport { NavLink } from 'react-router-dom';\nimport {baseUrl} from '../baseUrl';\n\nclass Login extends Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            username:'',\n            password:'',\n        }\n        this.handleSubmit=this.handleSubmit.bind(this);\n        this.handleInputChange=this.handleInputChange.bind(this);\n    }\n    handleSubmit(event){\n       // alert(\"Username:\"+this.state.username+\"Password:\"+this.state.password);\n        this.props.onLogging('loading');\n        const newLogin={\n            username:this.state.username,\n            password:this.state.password\n        }\n        fetch(baseUrl+\"login\",{\n            method: \"POST\",\n            body:JSON.stringify(newLogin),\n            headers:{\n                'Content-type':'application/json'\n            }\n        })\n        .then(response => {\n            if (response.ok) {\n            return response;\n            }else {\n                var error = new Error('Error ' + response.status + ': ' + response.errmsg);\n                error.response = response;\n                throw error;\n            }\n        },\n        error => {\n                throw error;\n        })\n        .then(response => response.json())\n        .then(response => this.props.onLogging('true'))\n        .catch(error =>  {\n            //console.log(error);\n            if(error.response.status===401){\n                this.props.onLogging('false');\n            }else{\n                this.props.onLogging('false');\n            }\n        });\n    }\n    handleInputChange(event){\n        const target=event.target;\n        const value=target.value;\n        const name=target.name;\n        this.setState({\n            [name]:value\n        })\n    }\n    render(){\n        return(\n            <Grid textAlign='center' style={{ height: '80vh' }} verticalAlign='middle'>\n                <Grid.Column style={{ maxWidth: 450 }}>\n                <Header as='h2' inverted textAlign='center'>\n                    Log-in to your account\n                </Header>\n                <Form size='large'>\n                    <Segment stacked>\n                    <Form.Input fluid icon='user' name=\"username\" iconPosition='left' placeholder='Username' value={this.state.username}\n                        onChange={this.handleInputChange}\n                    />\n                    <Form.Input\n                        fluid\n                        icon='lock'\n                        iconPosition='left'\n                        placeholder='Password'\n                        type='password'\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleInputChange}\n                    />\n                    <NavLink to=\"/registrationsCount\" onClick={this.handleSubmit}>\n                        <Button type=\"submit\" color='teal' fluid size='large'>\n                            Login\n                        </Button>\n                    </NavLink>\n                    </Segment>\n                </Form>\n                </Grid.Column>\n            </Grid>\n        );\n    }\n}\nexport default Login;","import React,{Component} from 'react';\nimport { Grid,Container,Header,Message,Button } from 'semantic-ui-react';\nimport {Chart} from 'react-google-charts';\nimport {NavLink} from 'react-router-dom';\n\nclass Registrationscount extends Component{\n    render(){\n        // const entries=this.state.entries.map(function(entry){\n        //     console.log(entry);\n        //     return(\n        //      <div key={entry._id}>{entry}</div>\n        //     );\n        // })\n       // console.log(this.state.entries.length);\n        \n        if(this.props.isLoggedIn==='true' && this.props.entries.length>0){\n            var entries=this.props.entries;\n            var selfCount=0;\n            var groupCount=0;\n            var corporateCount=0;\n            var othersCount=0;\n            for(var i=0;i<entries.length;i++){\n                console.log(entries[i]);\n                if(entries[i].registrationType===\"self\"){\n                    selfCount++;\n                }\n                else if(entries[i].registrationType===\"group\"){\n                    groupCount++;\n                }\n                else if(entries[i].registrationType===\"corporate\"){\n                    corporateCount++;\n                }\n                else if(entries[i].registrationType===\"others\"){\n                    othersCount++;\n                }\n            }\n            console.log(selfCount);console.log(groupCount);console.log(corporateCount);console.log(othersCount);\n            \n            return(\n                \n                <Container className=\"registrationsCount\">\n                    <Header as=\"h2\" inverted>Hi admin!</Header>\n                    <Grid divided>\n                        <Grid.Row>\n                            <Grid.Column computer={3}></Grid.Column>\n                            <Grid.Column computer={10} mobile={16}>\n                            <Header as=\"h3\" inverted>Following are the counts of registrations.</Header>\n                            <Chart\n                                backgroundColor=\"none\"\n                                height={400 }\n                                chartType=\"ColumnChart\"\n                                data={[\n                                ['Registration Type', 'Counts',],\n                                ['Self', selfCount],\n                                ['Group', groupCount],\n                                ['Corporate', corporateCount],\n                                ['Others', othersCount],\n                                ]}\n                                options={{\n                                title: 'Registration Counts',\n                                chartArea: { width: '65%' },\n                                hAxis: {\n                                    title: 'Registration Type',\n                                    minValue: 0,\n                                },\n                                vAxis: {\n                                    title: 'Count',\n                                },\n                                }}\n                                legendToggle\n                            />\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column computer={16}>\n                                <NavLink to=\"/registrations\"><Button color='teal'>View all registrations</Button></NavLink>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            );\n        }           \n        else if(this.props.isLoggedIn==='true' && this.props.entriesLoading){\n            \n            return(\n                <Message>Loading</Message>\n            );  \n        }\n        else if(this.props.isLoggedIn==='loading'){\n            return(\n                <Message>Loading</Message>\n            );\n        }\n        else if(this.props.isLoggedIn==='false'){\n            return(\n                <Message>You were not logged in! Please try again</Message>\n            );\n        }\n    }\n    \n}\n\nexport default Registrationscount;","import React from 'react';\nimport {Message,List,Container,Segment,Header} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\n\nconst Registrations = (props)=>{\n    if(props.isLoggedIn==='true'){\n        return(\n            <Container className=\"registrations\">\n                <Header as=\"h2\" inverted>Here is the list all the Registrations</Header>\n                <Segment inverted>\n                    <List divided inverted relaxed>\n                        {props.entries.map(function(entry){\n                            return(\n                                \n                                <List.Item key={entry._id}>\n                                    <Link to={`/registrations/${entry._id}`}>\n                                        <List.Content>\n                                            <strong>Registration id :</strong> {entry._id}\n                                            &nbsp;&nbsp;&nbsp;&nbsp;\n                                            <strong>Full Name : </strong> {entry.fullName}\n                                            <br></br><br></br>\n                                            <strong>Date Registered :</strong> {new Intl.DateTimeFormat('en-US', {\n                                                    year: 'numeric',\n                                                    month: 'long',\n                                                    day: '2-digit'\n                                                }).format(new Date(entry.createdAt))}\n                                        </List.Content>\n                                    </Link>\n                                </List.Item>\n                            );\n                        })}\n                    </List>\n                </Segment>\n            </Container>\n        );\n    }\n    else{\n        return(\n            <Message>Please log in and try again</Message>\n        );\n    }\n}\nexport default Registrations;\n","import React from 'react';\nimport { Container,Header,Image, Grid,Message} from 'semantic-ui-react';\nimport { baseUrl } from '../baseUrl';\n\nconst RegistrationDetail = (props)=>{\n    //console.log(props.entry.fullName);\n    if(props.isLoggedIn==='true'){\n        return(\n        \n            <Container className=\"registrationDetail\">\n                <Header as=\"h2\" inverted>Following are the details of this entry.</Header>\n                <Grid>\n                    <Grid.Row className=\"details\">\n                        <Grid.Column computer={2} mobile={16}></Grid.Column>\n                        <Grid.Column computer={7} mobile={16}>\n                            <Header as=\"h3\" inverted>Id Image :</Header>\n                            <Image src={baseUrl+props.entry.idImage} />\n                        </Grid.Column>\n                        <Grid.Column computer={7} mobile={16} textAlign=\"left\" >\n                            <Header inverted>Name: {props.entry.fullName}</Header>\n                            <Header inverted>Email: {props.entry.email}</Header>\n                            <Header inverted>Mobile: {props.entry.mobile}</Header>\n                            <Header inverted>Registration Type: {props.entry.registrationType}</Header>\n                            <Header inverted>Number of Tickets: {props.entry.numberOfTickets}</Header>\n                            <Header inverted>Registration id: {props.entry._id}</Header>\n                            <Header inverted>Registration Date: {new Intl.DateTimeFormat('en-US', {\n                                                    year: 'numeric',\n                                                    month: 'long',\n                                                    day: '2-digit'\n                                                }).format(new Date(props.entry.createdAt))}\n                            </Header>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Container>\n        ); \n    }\n    else{\n        return(\n            <Message>Please log in and try again</Message>\n        );\n    }\n}\n\nexport default RegistrationDetail;","import React, {Component} from 'react';\nimport Header from './HeaderComponent';\nimport Home from './HomeComponent';\nimport Register from './RegisterComponent';\nimport Login from './LoginComponent';\nimport Registrationscount from './RegistrationscountComponent';\nimport Registrations from './RegistrationsComponent';\nimport RegistrationDetail from './RegistrationDetail';\nimport {Switch,Route,Redirect} from 'react-router-dom';\nimport {baseUrl} from '../baseUrl';\n\nclass Main extends Component {\n    constructor(props){\n        super(props);\n        this.state={\n            isLoggedIn:'false',\n            entries:[],\n            entriesLoading:true\n        }\n    }\n    componentDidUpdate(prevProps,prevState){\n        if(this.state.isLoggedIn==='true' && prevState.isLoggedIn==='loading'){\n            fetch(baseUrl)\n                .then(response=>response.json())\n                .then((entries)=>{\n                    this.setState({\n                        entries:entries,\n                        entriesLoading:false\n                    })\n                    console.log(this.state.entries)\n                })\n                .catch(error=>console.log(error.message))\n        }\n    }\n    onLogIn(value){\n        this.setState({\n            isLoggedIn:value,\n        })\n    }\n    onLogOut(){\n        console.log(\"ran\");\n        this.setState({\n            isLoggedIn:'false'\n        })\n    }\n    render(){\n        console.log(this.state.isLoggedIn)\n        const RegistrationWithId = ({match}) => {\n            //alert(match.params.registrationId);\n            return(\n                <RegistrationDetail entry={this.state.entries.filter((entry) => entry._id === match.params.registrationId)[0]}\n                  isLoggedIn={this.state.isLoggedIn}\n                />\n            );\n        }\n        return(\n            <React.Fragment>\n                <Header isLoggedIn={this.state.isLoggedIn} onLoggingOut={()=>this.onLogOut()}/>\n                <Switch>\n                    <Route path=\"/home\" component={Home}/>\n                    <Route exact path=\"/register\" component={Register} />\n                    <Route path=\"/login\" component={()=><Login onLogging={(value)=>this.onLogIn(value)}/>} />\n                    <Route path=\"/registrationsCount\" \n                        component={()=><Registrationscount\n                                            isLoggedIn={this.state.isLoggedIn} \n                                            entries={this.state.entries} \n                                            entriesLoading={this.state.entriesLoading}\n                                            loginLoading={this.state.loginLoading}\n                                        />\n                        }\n                    />\n                    <Route exact path=\"/registrations\" component={()=><Registrations\n                                            isLoggedIn={this.state.isLoggedIn} \n                                            entries={this.state.entries} \n                                        />\n                        }\n                    />\n                    <Route path='/registrations/:registrationId' component={RegistrationWithId} />\n                    <Redirect to=\"/home\" />\n                </Switch>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport {BrowserRouter} from 'react-router-dom';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Main />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}